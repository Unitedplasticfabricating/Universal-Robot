<URProgram name="Start Heating Welder" installation="default" installationRelativePath="../default" directory="/programs/UPF" createdIn="5.14.5" lastSavedIn="5.14.5" robotSerialNumber="20236801216" createdInPolyscopeProgramVersion="2" lastSavedInPolycopeProgramVersion="2" crcValue="924418886">
  <kinematics status="LINEARIZED" validChecksum="true">
    <deltaTheta value="-1.4899131651953954E-7, -0.5163156704236374, 5.626292263290917, 1.173211441187188, 7.813190464889264E-7, -4.300337819590494E-7"/>
    <a value="-2.1311773410863242E-5, -0.748896650969478, -0.2818596402230846, -4.017768931271778E-5, -5.5248926104535545E-5, 0.0"/>
    <d value="0.23622484809471647, -424.08293337258226, -1564.6687202774174, 1988.9516200232913, 0.15909435754571752, 0.1538726401599885"/>
    <alpha value="1.5708436258517133, 0.001002489552312882, 3.374880014158008E-4, 1.571488190319432, -1.569996211212667, 0.0"/>
    <jointChecksum value="-1252576034, -1269366749, 685297201, -1257350671, -1278514167, -1281348999"/>
  </kinematics>
  <children>
    <InitVariablesNode/>
    <MainProgram runOnlyOnce="true" InitVariablesNode="false">
      <children>
        <Assignment valueSource="Expression">
          <variable name="HwResp" prefersPersistentValue="false" favourite="false">
            <initializeExpression/>
          </variable>
          <expression>
            <ExpressionChar character="["/>
            <ExpressionChar character="0"/>
            <ExpressionChar character=","/>
            <ExpressionChar character="0"/>
            <ExpressionChar character=","/>
            <ExpressionChar character="0"/>
            <ExpressionChar character="]"/>
          </expression>
        </Assignment>
        <Assignment valueSource="Expression">
          <variable name="target" prefersPersistentValue="false" favourite="false">
            <initializeExpression/>
          </variable>
          <expression>
            <ExpressionChar character="["/>
            <ExpressionChar character="2"/>
            <ExpressionChar character="5"/>
            <ExpressionChar character="2"/>
            <ExpressionChar character=","/>
            <ExpressionChar character="7"/>
            <ExpressionChar character="2"/>
            <ExpressionChar character=","/>
            <ExpressionChar character="4"/>
            <ExpressionChar character="9"/>
            <ExpressionChar character="]"/>
          </expression>
        </Assignment>
        <SuppressedNode>
          <suppressedNode class="Assignment" valueSource="Expression">
            <variable name="junk" prefersPersistentValue="false" favourite="false">
              <initializeExpression/>
            </variable>
            <expression>
              <ExpressionChar character="["/>
              <ExpressionChar character="0"/>
              <ExpressionChar character=","/>
              <ExpressionChar character="0"/>
              <ExpressionChar character=","/>
              <ExpressionChar character="0"/>
              <ExpressionChar character="]"/>
            </expression>
          </suppressedNode>
        </SuppressedNode>
        <SuppressedNode>
          <suppressedNode class="Contributed" strategyClass="com.wiretank.WireTank-Serial.WireTankSerial" strategyProgramNodeType="WireTank Serial" strategyURCapDeveloper="WireTank, LLC" strategyURCapName="WireTank Serial">
            <dataModel>
              <data key="Command" value="[252,72,49]"/>
              <data key="NODE_TITLE" value="Serial Bridge uH1"/>
              <data key="QUERY" value="true"/>
              <data key="byte_array" value="true"/>
              <data key="OUTPUT_ENTRY" value="Static"/>
              <Variable key="OUTPUT_VARIABLE">
                <variable reference="../../../../../SuppressedNode/suppressedNode/variable"/>
              </Variable>
            </dataModel>
          </suppressedNode>
        </SuppressedNode>
        <Contributed strategyClass="com.wiretank.WireTank-Serial.WireTankSerial" strategyProgramNodeType="WireTank Serial" strategyURCapDeveloper="WireTank, LLC" strategyURCapName="WireTank Serial">
          <dataModel>
            <data key="Command" value="[252,72,49]"/>
            <data key="NODE_TITLE" value="Serial Bridge uH1"/>
            <data key="byte_array" value="true"/>
            <data key="OUTPUT_ENTRY" value="Static"/>
            <data key="QUERY" value="true"/>
            <Variable key="OUTPUT_VARIABLE">
              <variable reference="../../../../Assignment/variable"/>
            </Variable>
          </dataModel>
        </Contributed>
        <If type="If" checkContinuously="false">
          <expression>
            <ExpressionChar character="H"/>
            <ExpressionChar character="w"/>
            <ExpressionChar character="R"/>
            <ExpressionChar character="e"/>
            <ExpressionChar character="s"/>
            <ExpressionChar character="p"/>
            <ExpressionChar character="â‰ "/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="a"/>
            <ExpressionChar character="r"/>
            <ExpressionChar character="g"/>
            <ExpressionChar character="e"/>
            <ExpressionChar character="t"/>
          </expression>
          <children>
            <Popup type="Message" haltProgram="false" message="cannot confirm that heating started" inputType="Text"/>
          </children>
        </If>
        <SuppressedNode>
          <suppressedNode class="Wait" type="Sleep">
            <waitTime>5.0</waitTime>
          </suppressedNode>
        </SuppressedNode>
        <SuppressedNode>
          <suppressedNode class="Popup" type="Message" haltProgram="false" message="heating started. push to stop" inputType="Text"/>
        </SuppressedNode>
        <SuppressedNode>
          <suppressedNode class="Contributed" strategyClass="com.wiretank.WireTank-Serial.WireTankSerial" strategyProgramNodeType="WireTank Serial" strategyURCapDeveloper="WireTank, LLC" strategyURCapName="WireTank Serial">
            <dataModel>
              <data key="NODE_TITLE" value="Serial Bridge uh?"/>
              <data key="byte_array" value="true"/>
              <data key="Command" value="[252,104,63]"/>
              <data key="OUTPUT_ENTRY" value="Static"/>
              <data key="QUERY" value="true"/>
              <Variable key="OUTPUT_VARIABLE">
                <variable reference="../../../../../Assignment/variable"/>
              </Variable>
            </dataModel>
          </suppressedNode>
        </SuppressedNode>
        <SuppressedNode>
          <suppressedNode class="Popup" type="Message" haltProgram="false" inputType="Variable">
            <variable reference="../../../Assignment/variable"/>
          </suppressedNode>
        </SuppressedNode>
        <SuppressedNode>
          <suppressedNode class="Wait" type="Sleep">
            <waitTime>20.0</waitTime>
          </suppressedNode>
        </SuppressedNode>
        <SuppressedNode>
          <suppressedNode class="Contributed" strategyClass="com.wiretank.WireTank-Serial.WireTankSerial" strategyProgramNodeType="WireTank Serial" strategyURCapDeveloper="WireTank, LLC" strategyURCapName="WireTank Serial">
            <dataModel>
              <data key="byte_array" value="true"/>
              <data key="Command" value="[252,72,48]"/>
              <data key="NODE_TITLE" value="Serial Bridge uH0"/>
              <data key="OUTPUT_ENTRY" value="Static"/>
              <data key="QUERY" value="false"/>
              <Variable key="OUTPUT_VARIABLE">
                <variable reference="../../../../../Assignment/variable"/>
              </Variable>
            </dataModel>
          </suppressedNode>
        </SuppressedNode>
        <SuppressedNode>
          <suppressedNode class="Popup" type="Message" haltProgram="false" message="heating stopped. push to start" inputType="Text"/>
        </SuppressedNode>
        <Comment comment="set the temp reader to high voltage (off) when program is running and low volt (on) when program not running"/>
        <Script type="Line">
          <expression>
            <ExpressionChar character="s"/>
            <ExpressionChar character="e"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="r"/>
            <ExpressionChar character="u"/>
            <ExpressionChar character="n"/>
            <ExpressionChar character="s"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="a"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="e"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="s"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="a"/>
            <ExpressionChar character="n"/>
            <ExpressionChar character="d"/>
            <ExpressionChar character="a"/>
            <ExpressionChar character="r"/>
            <ExpressionChar character="d"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="d"/>
            <ExpressionChar character="i"/>
            <ExpressionChar character="g"/>
            <ExpressionChar character="i"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="a"/>
            <ExpressionChar character="l"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="o"/>
            <ExpressionChar character="u"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="p"/>
            <ExpressionChar character="u"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="o"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="v"/>
            <ExpressionChar character="a"/>
            <ExpressionChar character="l"/>
            <ExpressionChar character="u"/>
            <ExpressionChar character="e"/>
            <ExpressionChar character="("/>
            <ExpressionChar character="2"/>
            <ExpressionChar character=","/>
            <ExpressionChar character="3"/>
            <ExpressionChar character=")"/>
          </expression>
        </Script>
        <Comment comment="set 5V power to munsch powerbox to high (on) when a program is started and low on unscheduled stop"/>
        <Script type="Line">
          <expression>
            <ExpressionChar character="s"/>
            <ExpressionChar character="e"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="r"/>
            <ExpressionChar character="u"/>
            <ExpressionChar character="n"/>
            <ExpressionChar character="s"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="a"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="e"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="s"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="a"/>
            <ExpressionChar character="n"/>
            <ExpressionChar character="d"/>
            <ExpressionChar character="a"/>
            <ExpressionChar character="r"/>
            <ExpressionChar character="d"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="d"/>
            <ExpressionChar character="i"/>
            <ExpressionChar character="g"/>
            <ExpressionChar character="i"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="a"/>
            <ExpressionChar character="l"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="o"/>
            <ExpressionChar character="u"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="p"/>
            <ExpressionChar character="u"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="t"/>
            <ExpressionChar character="o"/>
            <ExpressionChar character="_"/>
            <ExpressionChar character="v"/>
            <ExpressionChar character="a"/>
            <ExpressionChar character="l"/>
            <ExpressionChar character="u"/>
            <ExpressionChar character="e"/>
            <ExpressionChar character="("/>
            <ExpressionChar character="1"/>
            <ExpressionChar character=","/>
            <ExpressionChar character="5"/>
            <ExpressionChar character=")"/>
          </expression>
        </Script>
      </children>
    </MainProgram>
  </children>
</URProgram>